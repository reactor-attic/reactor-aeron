/*
 * Copyright (c) 2011-2017 Pivotal Software Inc, All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
  repositories {
	maven { url "https://repo.spring.io/plugins-release" }
  }
  dependencies {
	classpath 'org.springframework.build.gradle:propdeps-plugin:0.0.7',
			'io.spring.gradle:spring-io-plugin:0.0.4.RELEASE',
			'com.github.jengelman.gradle.plugins:shadow:1.2.0',
			'org.asciidoctor:asciidoctorj-pdf:1.5.0-alpha.8'
  }
}

plugins {
  id 'org.asciidoctor.convert' version '1.5.2'
}

description = 'Integration of Aeron library with reactor'

ext {
  gradleVersion = '3.5'
  gradleScriptDir = "${rootProject.projectDir}/gradle"

  reactorCoreVersion = '3.1.2.BUILD-SNAPSHOT'

  // Logging
  slf4jVersion = '1.7.12'
  logbackVersion = '1.1.5'

  // Libraries
  aeronVersion = '1.4.0'

  // Testing
  assertJVersion = '3.6.1'
  mockitoVersion = '2.7.22'

  javadocLinks = ["https://docs.oracle.com/javase/7/docs/api/",
				  "https://docs.oracle.com/javaee/6/api/",
				  "https://fasterxml.github.io/jackson-databind/javadoc/2.5/",
				  "https://www.reactive-streams.org/reactive-streams-1.0.2-javadoc/",
				  "https://projectreactor.io/docs/core/release/api/",
				  "https://projectreactor.io/docs/ipc/release/api/",
				  "https://projectreactor.io/docs/netty/release/api/",] as String[]
}

apply from: "$gradleScriptDir/setup.gradle"
apply from: "$gradleScriptDir/doc.gradle"

configure(allprojects) { project ->
  group = 'io.projectreactor.ipc'

  apply plugin: 'propdeps'
  apply plugin: 'java'
  apply plugin: 'groovy'
  apply from: "${gradleScriptDir}/ide.gradle"

  [compileJava, compileTestJava]*.options*.compilerArgs = ["-Xlint:varargs",
														   "-Xlint:cast",
														   "-Xlint:classfile",
														   "-Xlint:dep-ann",
														   "-Xlint:divzero",
														   "-Xlint:empty",
														   "-Xlint:finally",
														   "-Xlint:overrides",
														   "-Xlint:path",
														   "-Xlint:processing",
														   "-Xlint:static",
														   "-Xlint:try",
														   "-Xlint:deprecation",
														   "-Xlint:unchecked",
														   "-Xlint:-serial",      // intentionally disabled
														   "-Xlint:-options",     // intentionally disabled
														   "-Xlint:-fallthrough", // intentionally disabled
														   "-Xlint:-rawtypes"     // TODO enable and fix warnings
  ]

  compileJava {
	sourceCompatibility = 1.8
	targetCompatibility = 1.8
  }

  compileTestJava {
	sourceCompatibility = 1.8
	targetCompatibility = 1.8
  }

  if (JavaVersion.current().isJava8Compatible()) {
	compileTestJava.options.compilerArgs += "-parameters"
	tasks.withType(Javadoc) {
	  options.addStringOption('Xdoclint:none', '-quiet')
	}
  }

  [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
  sourceSets.test.resources.srcDirs = ["src/test/resources", "src/test/java"]

  configurations.all {
	exclude group: 'commons-logging', module: 'commons-logging'
  }

  repositories {
	mavenLocal()
	maven { url 'https://repo.spring.io/libs-milestone' }
	maven { url 'https://repo.spring.io/libs-snapshot' }
	maven { url "https://oss.sonatype.org/content/repositories/releases/" }
	jcenter()
	mavenCentral()
  }

  // dependencies that are common across all java projects
  dependencies {
	// JSR-305 annotations
	optional "com.google.code.findbugs:jsr305:3.0.0"

	// Logging
	optional "org.slf4j:slf4j-api:$slf4jVersion"

	compile "io.aeron:aeron-driver:$aeronVersion",
			"io.aeron:aeron-client:$aeronVersion"

	compile "io.projectreactor:reactor-core:$reactorCoreVersion"

	testCompile 'junit:junit:4.12'
	testCompile "io.projectreactor:reactor-test:$reactorCoreVersion"

	testRuntime "ch.qos.logback:logback-classic:$logbackVersion"
	// Testing
    testCompile "org.hamcrest:hamcrest-library:1.3",
            "org.assertj:assertj-core:$assertJVersion",
            "org.mockito:mockito-core:$mockitoVersion"
  }


  if (project.hasProperty('platformVersion')) {
	apply plugin: 'spring-io'

	repositories {
	  maven { url 'https://repo.spring.io/libs-snapshot' }
	}

	dependencyManagement {
	  springIoTestRuntime {
		imports {
		  mavenBom "io.spring.platform:platform-bom:$platformVersion"
		}
	  }
	}
  }
}

configurations.all {
	// check for updates every build
	resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

configure(rootProject) {
	archivesBaseName = 'reactor-aeron'
	description = 'Reactor Aeron: A reactive API for Aeron'

	artifacts {
		archives sourcesJar
		archives javadocJar
	}
}

project(':reactor-aeron-tools') {
	archivesBaseName = 'reactor-aeron-tools'
	description = 'Tools for Reactor Aeron'

	dependencies {
		compile rootProject
		compile rootProject.sourceSets.test.output
		compile "ch.qos.logback:logback-classic:$logbackVersion"
	}
}
